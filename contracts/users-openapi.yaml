components:
  schemas:
    HTTPError:
      properties:
        detail:
          type: object
        message:
          type: string
      type: object
      example:
        detail: { "error": "Invalid input" }
        message: "Bad request"
    PersonOut:
      properties:
        description:
          nullable: true
          type: string
        name:
          type: string
        title:
          nullable: true
          type: string
      type: object
      example:
        description: "Software Engineer"
        name: "John Doe"
        title: "Mr."
info:
  title: Users Service
  version: 0.1.0
openapi: 3.0.3
paths:
  /getPerson/{name}:
    get:
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
        examples:
          SUCCESS:
            value: "EmilyBache"
          BLACKLISTED:
            value: "DDT"
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonOut'
              examples:
                SUCCESS:
                  value:
                    description: "Independent Technical Coach, YouTuber, creator of Samman Coaching, Author"
                    name: "EmilyBache"
                    title: "Miss."
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
              examples:
                BLACKLISTED:
                  value:
                    detail: { "error": "Invalid input" }
                    message: "DDTs are not kind to bees."
          description: Bad Input
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
          description: Not found
      summary: Get Person Http
tags: []
